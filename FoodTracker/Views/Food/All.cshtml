@model FoodSearchQueryModel

@{
    ViewData["Title"] = "All Foods";
}

<form method="get">
    <div class="row mb-2">
        <div class="form-group col-md-4">
            <input asp-for="SearchTerm" class="form-control" placeholder="Search all foods..." />
        </div>

        <div class="form-group offset-md-4 col-md-4">
            <div class="form-group">
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Sorted by Most Recent</option>
                    <option value="1">Sorted from A - Z</option>
                    <option value="2">Sorted from Z - A</option>
                </select>
            </div>
        </div>

        <input type="submit" class="btn btn-primary d-none">
    </div>
</form>


@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var pageCount = Math.Ceiling((double)Model.TotalFoods / FoodSearchQueryModel.FoodsPerPage);
}

<div class="row mb-2">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled": string.Empty)"
           asp-controller="Food" 
           asp-action="All" 
           asp-route-currentPage="@previousPage"
           asp-route-name="@Model.Name"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-soring="@((int)Model.Sorting)">Previous</a>
    </div>
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == pageCount ? "disabled": string.Empty)" 
           asp-controller="Food" 
           asp-action="All" 
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-name="@Model.Name"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-soring="@((int)Model.Sorting)">Next</a>
    </div>
</div>

<table class="table">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Food Name</th>
      <th scope="col">Grams</th>
      <th scope="col">Calories</th>
      <th scope="col">Protein</th>
      <th scope="col">Carbs</th>
      <th scope="col">Fat</th>
    </tr>
  </thead>
    @{
        int rowCount = 1;

        foreach (var food in Model.Foods)
        {
            // Food Nutrition for 100g;
           //  if( food.Calories != 100)
            //{
              //  food.Calories = (food.Calories / food.Grams) * 100;
                //food.Protein  = (food.Protein / food.Grams) * 100;
                //food.Protein= (food.Protein / food.Grams) * 100;
                //food.Carbs = (food.Carbs / food.Grams) * 100;
                //food.Fat = (food.Fat / food.Grams) * 100;
                //food.Grams = 100;
            //}


         <tbody class="table-group-divider">
          <tr>
           <th scope="row">@rowCount</th>
           <td>@food.Name</td>
           <td>@food.Grams</td>
           <td>@food.Calories</td>
           <td>@food.Protein</td>
           <td>@food.Carbs</td>
           <td>@food.Fat</td>
          </tr>
            </tbody>

            rowCount++;
        }
    }
</table>